#!/usr/bin/python
####
#
# mssh -- magento-cloud ssh helper tool
#
# expects a single argument, the project url (including the environment/branch name)
# no validation beyond ensuring that the format of the url is correct is done
#
# ex:
# $mssh https://REGION.magento.cloud/projects/PROJECTID/environments/BRANCH
#
####


import os
import sys
import re

#error command (just in case)
bannerLen = 11
errMsg = "head -n " +str(bannerLen+1) +" "+ os.path.realpath(__file__) + "|tail -n "+str(bannerLen)

#is there an argument
if len(sys.argv) == 1:
    os.system(errMsg)
    sys.exit("Please provide an argument")

#get our url
ourUrl = re.sub("\/$","", re.sub('/#/','/',sys.argv[1]))

#experimental, convert branch .cloud urls (and hopefully catch wildcard subdomains)
if re.match("^https://.*\.magentosite.cloud", ourUrl):
    stepOne = re.sub("http(s)*://", "", str(ourUrl).split('.magentosite.cloud')[0])
    stepTwo = ourUrl.split('.')
    stepThree = len(stepTwo) - 1
    stepFour = str(stepTwo[stepThree-3]).split('-')
    ourUrl = str('https://' + stepTwo[stepThree -2] + '.magento.cloud/projects/' + stepFour[len(stepFour) - 1] + '/environments/' + stepFour[0])

#regex validation
if not re.match( "^http(s)://.*\.magento\.cloud\/projects\/[a-z0-9]+\/environments\/.*", ourUrl ):
    os.system(errMsg)
    print ourUrl
    sys.exit("Please verify and correct your branch URL")
    
#store project details in an array for later use
projDeets = str(ourUrl).split('/')

#seperate Id and Env (storing as different variables for possible code-reuse)
projId = projDeets[4]
projEnv = projDeets[6]

#print url before running anything
print ourUrl

#run magento-cloud with the needed arguments to start a ssh session
os.system("magento-cloud --project=" + projId + " --environment=" + projEnv + " ssh")
